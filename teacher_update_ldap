#!/bin/sh
die() {
	echo "$1" >&2
	exit 1
}

usage(){
	die "Usage: $0 DATA_DIR"
}

# main
# ----
[ $(id -u) -eq 0 ] || die "You must be root to run this script"

# check configuration files
for f in /etc/smbldap-tools/smbldap_bind.conf  /etc/smbldap-tools/smbldap.conf; do
	[ -r "$f" ] || die "Missing configuration file $f"
	. $f
done
[ "$1" ] || usage

#test1 non empty argument
[ "$1" ] || usage
INPUT_DIR="$1"

#test2 argument exists and is a directory
[ -d "$INPUT_DIR" ] || usage

ADD_TEACHER_FILE="$INPUT_DIR/add_teachers.csv"
DIS_TEACHER_FILE="$INPUT_DIR/disable_teachers.txt"
ENA_TEACHER_FILE="$INPUT_DIR/enable_teachers.txt"

DISABLE_EXCEPTIONS="ymejiasgo"

for f in $ADD_TEACHER_FILE $DIS_TEACHER_FILE $ENA_TEACHER_FILE ; do
	[ -r "$f" ] || usage
done

# TODO ...
# 1. process add_teacher ...

# 2. process disable_teachers
cat "$DIS_TEACHER_FILE" |while read l g d ; do
	# test
	if echo " $(groups $l |cut -f 2 -d :) " |grep -q " $g " ; then
		#remove from current dpto
		if smbldap-groupmod -x $l $g ; then
			echo "$l REMOVED from group $g"
			if smbldap-groupmod -m $l Dp_SIN_DEPARTAMENTO; then
				echo "$l ADDED to group Dp_SIN_DEPARTAMENTO"

			else
				echo "**ERROR adding $l to group Dp_SIN_DEPARTAMENTO"
			fi
		else
			echo "**ERROR removing $l from group $g"
		fi
	else
		echo "skiping $l, not member of $g"
	fi
done

# TODO ...
# 3. process enable_teachers ...

return 0
